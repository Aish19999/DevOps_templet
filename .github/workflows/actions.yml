name: Second Workflow

on:
  workflow_call:
  workflow_dispatch:
    
  workflow_run:
    workflows: ["Main Workflow"]
    types:
      - completed

jobs:
  second_job:
    runs-on: ubuntu-latest

    outputs:
      pipelineType: ${{steps.read_config.outputs.pipelineType}}
      buildTool:  ${{steps.read_config.outputs.buildTool}}
    

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo curl -sL https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64 -o /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Read pipelineconfig
        id: read_config
        run: |
          pipeline_config_path="${{ github.workspace }}/pipelineconfig.yml"

          # Use a tool like yq to parse the YAML file (install yq if needed)
          pipelineType=$(yq eval '.pipelineType' "${pipeline_config_path}")
          buildTool=$(yq eval '.buildTool' "${pipeline_config_path}")
          echo "PipelineType: $pipelineType"
          echo "BuildTool: $buildTool"
          echo "pipelineType=$pipelineType" >> $GITHUB_OUTPUT
          echo "buildTool=$buildTool" >> $GITHUB_OUTPUT
 #         echo "pipelineType=$pipelineType" >> $GITHUB_ENV
 #         echo "buildTool=$buildTool" >> $GITHUB_ENV
          
          

  Build_and_test:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType == 'java' && needs.second_job.outputs.buildTool == 'gradle' }}

    steps:
      - name: Running Java Gradle build
        uses: ./.github/workflows/javaGradleBuild.yml
        # Add configuration for Java Gradle build here

  Build_and_test_python:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType == 'java' && needs.second_job.outputs.buildTool == 'ant' }}

    steps:
      - name: Running Java ANT build
        uses: ./.github/workflows/javaAntBuild.yml
        # Add configuration for Java ANT build here

  Build_and_test_java_maven:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType == 'java' && needs.second_job.outputs.buildTool == 'maven' }}

    steps:
      - name: Running Java Maven build
        uses: ./.github/workflows/mavenBuild.yml
        # Add configuration for Java Maven build here

  Build_and_test_java_gradle:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType == 'java' && needs.second_job.outputs.buildTool == 'gradle' }}

    steps:
      - name: Running Java Gradle build
        uses: ./.github/workflows/javaGradleBuild.yml
        # Add configuration for Java Gradle build here

  Build_python:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType == 'python' }}

    steps:
      - name: Running Python build
        uses: ./.github/workflows/pythonBuild.yml
        # Add configuration for Python build here

  Build_and_test_dotnet:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType == '.net' }}

    steps:
      - name: Running .NET build
        uses: ./.github/workflows/dotnetBuild.yml
        # Add configuration for .NET build here

  Unknown_pipeline_type:
    needs: second_job
    runs-on: ubuntu-latest
    if: ${{ needs.second_job.outputs.pipelineType != 'java' && needs.second_job.outputs.pipelineType != 'python' && needs.second_job.outputs.pipelineType != '.net' }}

    steps:
      - name: Handling unknown pipeline type
        run: |
          echo "Unknown pipeline type: ${{ needs.second_job.outputs.pipelineType }}"
          # Add actions for handling unknown pipeline types here
